{"ast":null,"code":"import axios from \"axios\";\nimport { AuthActionType, authStore } from \"../\";\n\nclass AuthService {\n  async register(user) {\n    const response = await axios.post(`http://localhost:3001/api/auth/register`, user);\n    const token = response.data;\n    const action = {\n      type: AuthActionType.Register,\n      payload: token\n    };\n    authStore.dispatch(action);\n  }\n\n  async login(credentials) {\n    const response = await axios.post(`http://localhost:3001/api/auth/login`, credentials);\n    const token = response.data;\n    const action = {\n      type: AuthActionType.Login,\n      payload: token\n    };\n    authStore.dispatch(action);\n  }\n\n  logout() {\n    const action = {\n      type: AuthActionType.Logout\n    };\n    authStore.dispatch(action);\n  }\n\n}\n\nconst authService = new AuthService();\nexport default authService;","map":{"version":3,"names":["axios","AuthActionType","authStore","AuthService","register","user","response","post","token","data","action","type","Register","payload","dispatch","login","credentials","Login","logout","Logout","authService"],"sources":["/Users/nivyulevitch/Dropbox/Full Stack/John Bryce/Projects/3/Vacation-204789671/Vacation-Project/Frontend/src/Services/AuthService.ts"],"sourcesContent":["import axios from \"axios\";\nimport CredentialsModel from \"../Models/CredentialsModel\";\nimport UserModel from \"../Models/UserModel\";\nimport { AuthAction, AuthActionType, authStore } from \"../\";\n\nclass AuthService {\n    public async register ( user: UserModel ): Promise<void> {\n\n        const response = await axios.post<string>(`http://localhost:3001/api/auth/register`, user);\n\n        const token = response.data;\n\n        const action: AuthAction = { type: AuthActionType.Register, payload: token };\n        authStore.dispatch(action);\n    }\n\n    public async login ( credentials: CredentialsModel ): Promise<void> {\n        \n        const response = await axios.post<string>(`http://localhost:3001/api/auth/login`, credentials);\n        \n        const token = response.data;\n\n        const action: AuthAction = { type: AuthActionType.Login, payload: token };\n        authStore.dispatch(action);\n    }\n\n    public logout(): void {\n\n        const action: AuthAction = { type: AuthActionType.Logout };\n        authStore.dispatch(action);\n    }\n}\n\nconst authService = new AuthService();\n\nexport default authService;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAAqBC,cAArB,EAAqCC,SAArC,QAAsD,KAAtD;;AAEA,MAAMC,WAAN,CAAkB;EACO,MAARC,QAAQ,CAAGC,IAAH,EAAoC;IAErD,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAN,CAAoB,yCAApB,EAA8DF,IAA9D,CAAvB;IAEA,MAAMG,KAAK,GAAGF,QAAQ,CAACG,IAAvB;IAEA,MAAMC,MAAkB,GAAG;MAAEC,IAAI,EAAEV,cAAc,CAACW,QAAvB;MAAiCC,OAAO,EAAEL;IAA1C,CAA3B;IACAN,SAAS,CAACY,QAAV,CAAmBJ,MAAnB;EACH;;EAEiB,MAALK,KAAK,CAAGC,WAAH,EAAkD;IAEhE,MAAMV,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAN,CAAoB,sCAApB,EAA2DS,WAA3D,CAAvB;IAEA,MAAMR,KAAK,GAAGF,QAAQ,CAACG,IAAvB;IAEA,MAAMC,MAAkB,GAAG;MAAEC,IAAI,EAAEV,cAAc,CAACgB,KAAvB;MAA8BJ,OAAO,EAAEL;IAAvC,CAA3B;IACAN,SAAS,CAACY,QAAV,CAAmBJ,MAAnB;EACH;;EAEMQ,MAAM,GAAS;IAElB,MAAMR,MAAkB,GAAG;MAAEC,IAAI,EAAEV,cAAc,CAACkB;IAAvB,CAA3B;IACAjB,SAAS,CAACY,QAAV,CAAmBJ,MAAnB;EACH;;AAzBa;;AA4BlB,MAAMU,WAAW,GAAG,IAAIjB,WAAJ,EAApB;AAEA,eAAeiB,WAAf"},"metadata":{},"sourceType":"module"}